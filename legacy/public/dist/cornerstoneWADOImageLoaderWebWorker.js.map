{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./shared/calculateMinMax.js","webpack://[name]/./shared/decodeImageFrame.js","webpack://[name]/./shared/decoders/decodeBigEndian.js","webpack://[name]/./shared/decoders/decodeJPEG2000.js","webpack://[name]/./shared/decoders/decodeJPEGBaseline.js","webpack://[name]/./shared/decoders/decodeJPEGLS.js","webpack://[name]/./shared/decoders/decodeJPEGLossless.js","webpack://[name]/./shared/decoders/decodeLittleEndian.js","webpack://[name]/./shared/decoders/decodeRLE.js","webpack://[name]/./shared/getMinMax.js","webpack://[name]/./version.js","webpack://[name]/./webWorker/decodeTask/decodeTask.js","webpack://[name]/./webWorker/index.js","webpack://[name]/./webWorker/webWorker.js"],"names":["calculateMinMax","imageFrame","strict","minMax","pixelData","mustAssign","isNumber","smallestPixelValue","largestPixelValue","min","console","warn","max","numValue","decodeImageFrame","transferSyntax","decodeConfig","options","start","Date","getTime","Error","shouldShift","pixelRepresentation","undefined","shift","bitsStored","i","length","end","decodeTimeInMS","swap16","val","decodeBigEndian","bitsAllocated","arrayBuffer","buffer","offset","byteOffset","slice","Uint16Array","Int16Array","decodeJpx","jpxImage","JpxImage","parse","tileCount","tiles","columns","width","rows","height","items","openJPEG","decodeOpenJPEG","data","bytesPerPixel","signed","dataPtr","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","ret","ccall","log","_free","getValue","imagePtr","image","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","Uint8Array","from","t1","decodeOpenJpeg2000","photometricInterpretation","initializeJPEG2000","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","charLS","jpegLSDecode","isSigned","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","bitsPerSample","stride","components","allowedLossyError","interleaveMode","set","HEAP8","HEAP16","initializeJPEGLS","CharLS","_jpegls_decode","decodeJPEGLS","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","decodeLittleEndian","Float32Array","decodeRLE","planarConfiguration","decode8Planar","decode8","decode16","frameData","frameSize","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","Int8Array","out","outIndex","numSegments","getInt32","s","inIndex","maxIndex","endOfSegment","n","value","j","highByte","getMinMax","storedPixelData","storedPixel","numPixels","index","Math","codecsLoaded","loadCodecs","config","self","importScripts","decodeTask","codecsPath","initializeCodecsOnStartup","initialize","loadCodecsOnStartup","handler","doneCallback","taskType","default","registerTaskHandler","taskHandlers","initialized","webWorkerTaskPaths","Object","keys","forEach","key","taskConfiguration","postMessage","status","workerIndex","taskHandler","loadWebWorkerTask","sourcePath","onmessage","msg","transferList"],"mappings":"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","file":"cornerstoneWADOImageLoaderWebWorker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./webWorker/index.js\");\n","import getMinMax from './getMinMax.js';\n\n/**\n * Check the minimum and maximum values in the imageFrame pixel data\n * match with the provided smallestPixelValue and largestPixelValue metaData.\n *\n * If 'strict' is true, log to the console a warning if these values do not match.\n * Otherwise, correct them automatically.\n *\n * @param {Object} imageFrame\n * @param {Boolean} strict If 'strict' is true, log to the console a warning if these values do not match.\n * Otherwise, correct them automatically.Default is true.\n */\nexport default function calculateMinMax (imageFrame, strict = true) {\n  const minMax = getMinMax(imageFrame.pixelData);\n  const mustAssign = !(isNumber(imageFrame.smallestPixelValue) && isNumber(imageFrame.largestPixelValue));\n\n\n  if (strict === true && !mustAssign) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\nfunction isNumber (numValue) {\n  return typeof numValue === 'number';\n}\n","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\nimport decodeRLE from './decoders/decodeRLE.js';\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  const start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = decodeRLE(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  const shouldShift = imageFrame.pixelRepresentation !== undefined && imageFrame.pixelRepresentation === 1;\n  const shift = (shouldShift && imageFrame.bitsStored !== undefined) ? (32 - imageFrame.bitsStored) : undefined;\n\n  if (shouldShift && shift !== undefined) {\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      // eslint-disable-next-line no-bitwise\n      imageFrame.pixelData[i] = (imageFrame.pixelData[i] << shift >> shift);\n    }\n  }\n\n  const end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexport default decodeImageFrame;\n","/* eslint no-bitwise: 0 */\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) |\n    ((val >> 8) & 0xFF);\n}\n\n\nfunction decodeBigEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeBigEndian;\n","function decodeJpx (imageFrame, pixelData) {\n  const jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  const tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error(`JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`);\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nlet openJPEG;\n\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\n  const dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  const imagePtrPtr = openJPEG._malloc(4);\n  const imageSizePtr = openJPEG._malloc(4);\n  const imageSizeXPtr = openJPEG._malloc(4);\n  const imageSizeYPtr = openJPEG._malloc(4);\n  const imageSizeCompPtr = openJPEG._malloc(4);\n\n  const t0 = new Date().getTime();\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  const image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  const length = image.sx * image.sy * image.nbChannels;\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (let i = 0; i < length; i++) {\n      image.pixelData[i] = src32[i];\n    }\n  }\n\n  const t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  const signed = imageFrame.pixelRepresentation === 1;\n\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000 (decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexport default decodeJPEG2000;\nexport { initializeJPEG2000 };\n","\n\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  const jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexport default decodeJPEGBaseline;\n","let charLS;\n\nfunction jpegLSDecode (data, isSigned) {\n  // prepare input parameters\n  const dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  const imagePtrPtr = charLS._malloc(4);\n  const imageSizePtr = charLS._malloc(4);\n  const widthPtr = charLS._malloc(4);\n  const heightPtr = charLS._malloc(4);\n  const bitsPerSamplePtr = charLS._malloc(4);\n  const stridePtr = charLS._malloc(4);\n  const allowedLossyErrorPtr = charLS._malloc(4);\n  const componentsPtr = charLS._malloc(4);\n  const interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  const result = charLS.ccall(\n    'jpegls_decode',\n    'number',\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\n  );\n\n  // Extract result values into object\n  const image = {\n    result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS () {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n\n}\n\nfunction decodeJPEGLS (imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error(`JPEG-LS decoder failed to decode frame (error code ${image.result})`);\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexport default decodeJPEGLS;\nexport { initializeJPEGLS };\n","\n\nfunction decodeJPEGLossless (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' ||\n    typeof jpeg.lossless === 'undefined' ||\n    typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  const buffer = pixelData.buffer;\n  const decoder = new jpeg.lossless.Decoder();\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n\n}\n\nexport default decodeJPEGLossless;\n","function decodeLittleEndian (imageFrame, pixelData) {\n  let arrayBuffer = pixelData.buffer;\n  let offset = pixelData.byteOffset;\n  const length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeLittleEndian;\n","function decodeRLE (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    let outIndex = 0;\n    const highByte = (s === 0 ? 1 : 0);\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[(outIndex * 2) + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[(outIndex * 2) + highByte] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeRLE;\n","/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param {Number[]} storedPixelData\n * @return {{min: Number, max: Number}}\n */\nfunction getMinMax (storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n  let max = storedPixelData[0];\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\nexport default getMinMax;\n","export default '2.1.4';\n","import { initializeJPEG2000 } from '../../shared/decoders/decodeJPEG2000.js';\nimport { initializeJPEGLS } from '../../shared/decoders/decodeJPEGLS.js';\nimport calculateMinMax from '../../shared/calculateMinMax.js';\nimport decodeImageFrame from '../../shared/decodeImageFrame.js';\n\n// flag to ensure codecs are loaded only once\nlet codecsLoaded = false;\n\n// the configuration object for the decodeTask\nlet decodeConfig;\n\n/**\n * Function to control loading and initializing the codecs\n * @param config\n */\nfunction loadCodecs (config) {\n  // prevent loading codecs more than once\n  if (codecsLoaded) {\n    return;\n  }\n\n  // Load the codecs\n  // console.time('loadCodecs');\n  self.importScripts(config.decodeTask.codecsPath);\n  codecsLoaded = true;\n  // console.timeEnd('loadCodecs');\n\n  // Initialize the codecs\n  if (config.decodeTask.initializeCodecsOnStartup) {\n    // console.time('initializeCodecs');\n    initializeJPEG2000(config.decodeTask);\n    initializeJPEGLS(config.decodeTask);\n    // console.timeEnd('initializeCodecs');\n  }\n}\n\n/**\n * Task initialization function\n */\nfunction initialize (config) {\n  decodeConfig = config;\n  if (config.decodeTask.loadCodecsOnStartup) {\n    loadCodecs(config);\n  }\n}\n\n/**\n * Task handler function\n */\nfunction handler (data, doneCallback) {\n  // Load the codecs if they aren't already loaded\n  loadCodecs(decodeConfig);\n\n  const strict = decodeConfig && decodeConfig.decodeTask && decodeConfig.decodeTask.strict;\n  const imageFrame = data.data.imageFrame;\n\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\n  // not typed arrays\n  const pixelData = new Uint8Array(data.data.pixelData);\n\n  decodeImageFrame(\n    imageFrame,\n    data.data.transferSyntax,\n    pixelData,\n    decodeConfig.decodeTask,\n    data.data.options);\n\n  if (!imageFrame.pixelData) {\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\n  }\n\n  calculateMinMax(imageFrame, strict);\n\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\n  // typed arrays\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\n\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\n  // UI thread without making a copy\n  doneCallback(imageFrame, [imageFrame.pixelData]);\n}\n\nexport default {\n  taskType: 'decodeTask',\n  handler,\n  initialize\n};\n","import { registerTaskHandler } from './webWorker.js';\nimport decodeTask from './decodeTask/decodeTask.js';\n\n// register our task\nregisterTaskHandler(decodeTask);\n\nexport { registerTaskHandler };\nexport { default as version } from '../version.js';\n","// an object of task handlers\nconst taskHandlers = {};\n\n// Flag to ensure web worker is only initialized once\nlet initialized = false;\n\n// the configuration object passed in when the web worker manager is initialized\nlet config;\n\n/**\n * Initialization function that loads additional web workers and initializes them\n * @param data\n */\nfunction initialize (data) {\n  // console.log('web worker initialize ', data.workerIndex);\n  // prevent initialization from happening more than once\n  if (initialized) {\n    return;\n  }\n\n  // save the config data\n  config = data.config;\n\n  // load any additional web worker tasks\n  if (data.config.webWorkerTaskPaths) {\n    for (let i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\n    }\n  }\n\n  // initialize each task handler\n  Object.keys(taskHandlers).forEach(function (key) {\n    taskHandlers[key].initialize(config.taskConfiguration);\n  });\n\n  // tell main ui thread that we have completed initialization\n  self.postMessage({\n    taskType: 'initialize',\n    status: 'success',\n    result: {\n    },\n    workerIndex: data.workerIndex\n  });\n\n  initialized = true;\n}\n\n/**\n * Function exposed to web worker tasks to register themselves\n * @param taskHandler\n */\nexport function registerTaskHandler (taskHandler) {\n  if (taskHandlers[taskHandler.taskType]) {\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\n\n    return false;\n  }\n  taskHandlers[taskHandler.taskType] = taskHandler;\n  if (initialized) {\n    taskHandler.initialize(config.taskConfiguration);\n  }\n}\n\n/**\n * Function to load a new web worker task with updated configuration\n * @param data\n */\nfunction loadWebWorkerTask (data) {\n  config = data.config;\n  self.importScripts(data.sourcePath);\n}\n\n/**\n * Web worker message handler - dispatches messages to the registered task handlers\n * @param msg\n */\nself.onmessage = function (msg) {\n  // console.log('web worker onmessage', msg.data);\n\n  // handle initialize message\n  if (msg.data.taskType === 'initialize') {\n    initialize(msg.data);\n\n    return;\n  }\n\n  // handle loadWebWorkerTask message\n  if (msg.data.taskType === 'loadWebWorkerTask') {\n    loadWebWorkerTask(msg.data);\n\n    return;\n  }\n\n  // dispatch the message if there is a handler registered for it\n  if (taskHandlers[msg.data.taskType]) {\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\n      self.postMessage({\n        taskType: msg.data.taskType,\n        status: 'success',\n        result,\n        workerIndex: msg.data.workerIndex\n      }, transferList);\n    });\n\n    return;\n  }\n\n  // not task handler registered - send a failure message back to ui thread\n  console.log('no task handler for ', msg.data.taskType);\n  console.log(taskHandlers);\n  self.postMessage({\n    taskType: msg.data.taskType,\n    status: 'failed - no task handler registered',\n    workerIndex: msg.data.workerIndex\n  });\n};\n"],"sourceRoot":""}