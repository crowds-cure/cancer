@value globals: "../GlobalStyles.css";
@value activeColor, uiBlack from globals;
@value screen-min, screen-xs from globals;

.MeasurementControl {
  display: table;
  position: relative;
}

.MeasurementControl .controls {
  border-radius: 8px;
  border: solid 1px #4a4d7a;
  background-color: uiBlack;
  padding: 10px 0;
  height: 45px;
}

.MeasurementControl .controls .number {
  color: #7cf4fe;
  font-size: 20px;
  line-height: 23px;
  margin: 0 10px;
}

.MeasurementControl .lesions {
  bottom: -20px;
  color: activeColor;
  font-size: 12px;
  font-weight: normal;
  letter-spacing: 1px;
  left: 0;
  line-height: 20px;
  position: absolute;
  text-align: center;
  text-transform: uppercase;
  width: 100%;
}

@media (min-width: screen-xs) {
  .MeasurementControl .controls .label {
    display: none;
  }

  .MeasurementControl .controls .left-arrow,
  .MeasurementControl .controls .right-arrow {
    border: 7px solid activeColor;
    border-top-color: transparent;
    border-bottom-color: transparent;
    display: inline-block;
    width: 0;
    height: 0;
  }

  .MeasurementControl .controls .arrow-container {
    cursor: pointer;
    transition: 0.15s all ease;
  }

  .MeasurementControl .controls .arrow-container .arrow {
    transition: 0.15s all ease;
  }

  .MeasurementControl .controls.disabled .arrow-container {
    background-color: #262548;
    cursor: not-allowed;
  }

  .MeasurementControl .controls.disabled .arrow-container > .arrow {
    border: 7px solid #3a5874;
    border-top-color: transparent;
    border-bottom-color: transparent;
  }

  .MeasurementControl .controls:not(.disabled) .arrow-container:hover {
    background-color: #0f373b;
  }

  .MeasurementControl .controls:not(.disabled) .arrow-container:active {
    background-color: activeColor;
  }

  .MeasurementControl
    .controls:not(.disabled)
    .arrow-container:active
    > .arrow {
    border: 7px solid uiBlack;
    border-top-color: transparent;
    border-bottom-color: transparent;
  }

  .MeasurementControl .controls.disabled .arrow-container > .left-arrow {
    border-left: 0px;
  }

  .MeasurementControl .controls.disabled .arrow-container > .right-arrow {
    border-right: 0px;
  }

  .MeasurementControl .controls .right-arrow {
    border-right: 0px;
    margin-left: 2px;
  }

  .MeasurementControl .controls .left-arrow {
    border-left: 0px;
    margin-right: 2px;
  }

  .MeasurementControl .controls .arrow-container {
    background-color: #262548;
    border-radius: 50%;
    display: inline-block;
    height: 22px;
    margin: 0 10px;
    padding: 3px 0px 0px 6px;
    width: 22px;
  }

  .MeasurementControl
    .controls:not(.disabled)
    .arrow-container:active
    > .left-arrow {
    border-left: 0px;
  }

  .MeasurementControl
    .controls:not(.disabled)
    .arrow-container:active
    > .right-arrow {
    border-right: 0px;
  }
}

@media (max-width: screen-min) {
  .MeasurementControl .controls {
    background-color: rgba(0, 0, 0, 0.8);
    border: 1px solid #16daac;
    border-radius: 9px;
    display: table;
    height: 36px;
    overflow: hidden;
    padding: 0;
  }

  .MeasurementControl .controls .number {
    display: none;
  }

  .MeasurementControl .controls .arrow-container {
    background-color: transparent !important;
    display: inline-block;
    height: 100%;
    position: relative;
    width: 34px;
  }

  .MeasurementControl .controls .arrow-container:not(:last-child) {
    border-right: 1px solid #16daac;
    width: 35px;
  }

  .MeasurementControl .controls .label {
    color: #ffffff;
    display: inline-block;
    font-size: 14px;
    font-weight: 600;
    height: 34px;
    line-height: 34px;
    padding: 0 8px;
    vertical-align: top;
    width: auto;
  }

  .MeasurementControl .controls .arrow-container > .arrow {
    border: 2px solid #ffffff;
    border-left: 0;
    border-top: 0;
    display: block;
    height: 12px;
    left: 50%;
    margin: 0;
    position: absolute;
    top: 50%;
    transform-origin: 50% 50%;
    width: 12px;
  }

  .MeasurementControl .controls .arrow-container > .arrow.left-arrow {
    transform: translate(calc(-50% + 3px), -50%) rotate(135deg);
  }

  .MeasurementControl .controls .arrow-container > .arrow.right-arrow {
    transform: translate(calc(-50% - 3px), -50%) rotate(-45deg);
  }

  .MeasurementControl .controls.disabled .arrow-container > .arrow,
  .MeasurementControl .controls.disabled .label {
    opacity: 0.5;
  }
}
